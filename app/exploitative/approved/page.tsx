"use client";

import WebsitePhase from "@/components/WebsitePhase";
import { useSimulation } from "@/components/providers/SimulationProvider";
import { Button } from "@/components/ui/Button";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";

export default function ExploitativeApprovedPage() {
  const router = useRouter();
  const { session, updateSession } = useSimulation();
  const [showRollover, setShowRollover] = useState(false);
  const [autoRolloverEnabled, setAutoRolloverEnabled] = useState(false);
  const [rolloverCount, setRolloverCount] = useState(0);

  const loanData = session.loanData || {
    loanAmount: "1000",
    fees: {
      amount: 1000,
      fee: 150,
      processingFee: 49.99,
      verificationFee: 29.99,
      total: 1229.98,
      apr: 391.07,
    },
  };

  // Show rollover option after 10 seconds
  useEffect(() => {
    const timer = setTimeout(() => {
      setShowRollover(true);
    }, 10000);

    return () => clearTimeout(timer);
  }, []);

  const handleRollover = () => {
    setAutoRolloverEnabled(true);
    setRolloverCount(1);

    updateSession({
      interactionEvents: [
        ...(session.interactionEvents || []),
        {
          type: "rollover_activated",
          timestamp: Date.now(),
          data: {
            autoRenewal: true,
            initialDebt: loanData.fees.total,
          },
        },
      ],
    });
  };

  const calculateTotalDebt = () => {
    const baseFee = loanData.fees.fee;
    const totalRolloverFees = baseFee * rolloverCount;
    return loanData.fees.total + totalRolloverFees;
  };

  return (
    <WebsitePhase phase={1}>
      <div className="min-h-screen bg-gray-50 py-12">
        <div className="max-w-2xl mx-auto px-4">
          {/* Success message */}
          <div className="bg-green-50 border-2 border-green-500 rounded-lg p-8 mb-8 text-center">
            <div className="text-6xl mb-4">‚úÖ</div>
            <h1 className="text-3xl font-bold text-green-800 mb-2">
              APPROVED!
            </h1>
            <p className="text-lg text-green-700">
              Your ${loanData.loanAmount} is being deposited now!
            </p>
            <p className="text-sm text-gray-600 mt-2">
              Transaction ID: #PDL
              {Math.random().toString(36).substr(2, 9).toUpperCase()}
            </p>
          </div>

          {/* Loan details */}
          <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
            <h2 className="text-xl font-bold mb-4">Your Loan Details</h2>

            <div className="space-y-3">
              <div className="flex justify-between py-2 border-b">
                <span>Amount Borrowed:</span>
                <span className="font-semibold">${loanData.loanAmount}</span>
              </div>

              <div className="flex justify-between py-2 border-b">
                <span>Due Date:</span>
                <span className="font-semibold">
                  {new Date(
                    Date.now() + 14 * 24 * 60 * 60 * 1000
                  ).toLocaleDateString()}
                </span>
              </div>

              <div className="flex justify-between py-2 border-b">
                <span>Total Due:</span>
                <span className="font-bold text-lg">
                  ${calculateTotalDebt().toFixed(2)}
                </span>
              </div>

              {autoRolloverEnabled && (
                <div className="mt-4 p-4 bg-yellow-50 rounded-lg">
                  <p className="text-sm font-semibold text-yellow-800">
                    üîÑ Auto-Renewal Active
                  </p>
                  <p className="text-xs text-gray-600 mt-1">
                    Your loan will automatically extend every 14 days with a fee
                    of ${loanData.fees.fee} until paid in full.
                  </p>
                  <p className="text-xs text-gray-500 mt-2">
                    Current extensions: {rolloverCount} | Additional fees: $
                    {(loanData.fees.fee * rolloverCount).toFixed(2)}
                  </p>
                </div>
              )}
            </div>
          </div>

          {/* One-click rollover trap */}
          {showRollover && !autoRolloverEnabled && (
            <div className="bg-blue-50 border-2 border-blue-300 rounded-lg p-6 mb-8 animate-pulse">
              <h3 className="text-lg font-bold mb-2">üí° Can't Pay in Full?</h3>
              <p className="text-gray-700 mb-4">
                No problem! Just pay the fee and extend your loan. Keep your
                credit safe!
              </p>

              <Button
                size="lg"
                className="w-full bg-blue-500 hover:bg-blue-600"
                onClick={handleRollover}
              >
                YES - Extend My Loan! üëç
              </Button>

              <p className="text-xs text-gray-500 mt-2 text-center">
                Just ${loanData.fees.fee} to extend for 2 more weeks
              </p>
            </div>
          )}

          {/* Hidden data selling notice */}
          <div className="text-xs text-gray-400 text-center mb-8">
            <p>Your application data has been shared with our partners:</p>
            <p className="font-mono text-xxs mt-1">
              soldTo: ["credit_broker_xyz.com", "leadgen_network.io",
              "data_aggregator.net"]
            </p>
          </div>

          {/* Next steps with buried important info */}
          <div className="bg-gray-100 rounded-lg p-6">
            <h3 className="font-bold mb-4">What Happens Next?</h3>

            <ol className="space-y-3 text-sm">
              <li>
                <strong>1. Funds Deposited:</strong> Check your account in 1-24
                hours
              </li>
              <li>
                <strong>2. Repayment:</strong> We'll automatically debit your
                account on the due date
              </li>
              <li>
                <strong>3. Need Help?</strong> Our team is here 24/7
              </li>
            </ol>

            <p className="text-xs text-gray-500 mt-4">
              Important: If insufficient funds on due date, a $35 NSF fee will
              be charged and your loan will automatically renew. Multiple
              payment attempts will be made. See terms for details. By accepting
              these funds, you authorize us to contact you via all methods
              including autodialed calls and texts. Your information may be
              reported to credit bureaus.
            </p>
          </div>

          {/* Action buttons */}
          <div className="mt-8 flex gap-4">
            <Button
              variant="outline"
              className="flex-1"
              onClick={() => router.push("/")}
            >
              Return Home
            </Button>

            <Button
              className="flex-1 bg-green-500 hover:bg-green-600"
              onClick={() => {
                // Track completion
                updateSession({
                  interactionEvents: [
                    ...(session.interactionEvents || []),
                    {
                      type: "completed_application",
                      timestamp: Date.now(),
                      data: {
                        totalDebt: calculateTotalDebt(),
                        autoRollover: autoRolloverEnabled,
                      },
                    },
                  ],
                });
                router.push("/reflection");
              }}
            >
              View Analysis ‚Üí
            </Button>
          </div>
        </div>
      </div>
    </WebsitePhase>
  );
}
