name: 🚀 Deploy Lotus Educational Platform

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'https://lotus-educational.vercel.app' }}

jobs:
  # 📊 Quality Assurance
  test:
    name: 🧪 Test & Quality Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests
        run: npm run test -- --coverage
        
      - name: 🔍 Run linting
        run: npm run lint
        
      - name: 🔎 Type checking
        run: npm run type-check
        
      - name: 🏗️ Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          
  # 🔒 Security Scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔒 Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript
          
      - name: 🛡️ Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
      - name: 📋 npm audit
        run: npm audit --audit-level=critical
        
      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v3
        
  # 🚀 Performance Testing
  performance:
    name: ⚡ Performance Check
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 📊 Bundle Analysis
        run: npm run analyze
        
      - name: 💡 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: '.lighthouserc.json'
          uploadArtifacts: true
          
  # 🌐 Multi-Platform Deployment
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [test, security, performance]
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
      
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      # 🔵 Vercel Deployment (Primary)
      - name: 🚀 Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
      # 🚂 Railway Deployment (Backup)
      - name: 🚂 Deploy to Railway
        uses: bervProject/railway-deploy@v1.0.0
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: lotus-platform
          
      # 🌐 Netlify Deployment (CDN)
      - name: 🌐 Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: './out'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          
  # 📊 Post-Deployment Testing
  post-deploy:
    name: 📊 Post-Deployment Tests
    runs-on: ubuntu-latest
    needs: [deploy]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run E2E tests
        run: npm run test:e2e
        env:
          BASE_URL: ${{ needs.deploy.outputs.url }}
          
      - name: 📊 Health Check
        run: |
          curl -f ${{ needs.deploy.outputs.url }}/api/health || exit 1
          
      - name: 🔍 Security Headers Check
        run: |
          npm run security:headers -- --url=${{ needs.deploy.outputs.url }}
          
  # 🔄 Staging Deployment
  deploy-staging:
    name: 🎭 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/develop'
    
    environment:
      name: staging
      url: ${{ steps.deploy-staging.outputs.url }}
      
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        env:
          NODE_ENV: staging
          
      - name: 🎭 Deploy to Staging
        id: deploy-staging
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--target staging'
          
  # 📬 Notifications
  notify:
    name: 📬 Notify
    runs-on: ubuntu-latest
    needs: [deploy, post-deploy]
    if: always()
    
    steps:
      - name: 📬 Discord notification
        if: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            🚀 **Lotus Platform Deployment** 
            📊 **Status**: ${{ job.status }}
            🌐 **URL**: ${{ needs.deploy.outputs.url }}
            📅 **Time**: ${{ github.event.head_commit.timestamp }}
            👤 **Author**: ${{ github.actor }}
            
      - name: 📧 Email notification
        if: failure() && ${{ secrets.EMAIL_NOTIFICATIONS }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "⚠️ Lotus Platform Deployment Failed"
          body: |
            Deployment failed for commit ${{ github.sha }}
            Check the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
