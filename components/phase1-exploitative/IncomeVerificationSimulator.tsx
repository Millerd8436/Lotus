"use client";

import React, { useState } from "react";
import { Card } from "@/components/shared/Card";
import { Button } from "@/components/shared/Button";

interface IncomeVerificationSimulatorProps {
  onPatternDetected?: (pattern: string, severity: number) => void;
  phase?: number;
}

export const IncomeVerificationSimulator: React.FC<IncomeVerificationSimulatorProps> = ({
  onPatternDetected,
  phase = 1,
}) => {
  const [incomeAmount, setIncomeAmount] = useState("");
  const [incomeSource, setIncomeSource] = useState("");
  const [isVerifying, setIsVerifying] = useState(false);

  const handleVerification = () => {
    setIsVerifying(true);
    
    // Simulate dark pattern detection
    if (onPatternDetected) {
      onPatternDetected("income-pressure", 7);
    }

    setTimeout(() => {
      setIsVerifying(false);
    }, 2000);
  };

  return (
    <Card className="w-full max-w-md">
      <div className="space-y-4">
        <h3 className="text-lg font-semibold text-gray-900">
          Income Verification
        </h3>
        
        <div>
          <label htmlFor="income" className="block text-sm font-medium text-gray-700">
            Monthly Income
          </label>
          <input
            type="number"
            id="income"
            value={incomeAmount}
            onChange={(e) => setIncomeAmount(e.target.value)}
            className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            placeholder="Enter your monthly income"
          />
        </div>

        <div>
          <label htmlFor="source" className="block text-sm font-medium text-gray-700">
            Income Source
          </label>
          <select
            id="source"
            value={incomeSource}
            onChange={(e) => setIncomeSource(e.target.value)}
            className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
          >
            <option value="">Select income source</option>
            <option value="employment">Employment</option>
            <option value="benefits">Government Benefits</option>
            <option value="self-employed">Self-Employed</option>
            <option value="other">Other</option>
          </select>
        </div>

        <Button
          onClick={handleVerification}
          disabled={!incomeAmount || !incomeSource || isVerifying}
          className="w-full"
        >
          {isVerifying ? "Verifying..." : "Verify Income"}
        </Button>

        {phase === 3 && (
          <div className="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded">
            <p className="text-sm text-yellow-800">
              <strong>Educational Note:</strong> This verification process may be designed to pressure you into inflating your income to qualify for a larger loan.
            </p>
          </div>
        )}
      </div>
    </Card>
  );
};

export default IncomeVerificationSimulator; 