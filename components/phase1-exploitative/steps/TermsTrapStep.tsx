"use client";

import { Button } from "@/components/shared/Button";
import { EnhancedLoanCalculator } from "@/core/core/EnhancedLoanCalculator";
import { ChevronRight } from "lucide-react";
import React, { useState, useEffect } from "react";

interface TermsTrapStepProps {
  onNext: () => void;
  onCancel: () => void;
  phase: 1 | 3;
  onPatternDetected: (pattern: string, severity: number) => void;
}

const TermsTrapStep: React.FC<TermsTrapStepProps> = ({
  onNext,
  onCancel,
  phase,
  onPatternDetected,
}) => {
  const [formData, setFormData] = useState({
    achAuthorization: false,
    confessionOfJudgment: false,
    arbitrationAgreement: false,
    wageAssignment: false,
    collectionCallsToEmployer: false,
  });

  const loanAmount = 300; // Example value
  const deceptiveLoan = EnhancedLoanCalculator.calculateExploitativeLoan(
    loanAmount
  );

  useEffect(() => {
    if (phase === 3) {
      onPatternDetected(
        "The terms and conditions are designed to be confusing and coercive.",
        9
      );
    }
  }, [phase, onPatternDetected]);

  return (
    <div className="space-y-6">
      <h3 className="text-xl font-semibold">Review & Accept Terms</h3>
      <div className="space-y-3">
        <label className="flex items-start gap-3 cursor-pointer">
          <input
            type="checkbox"
            checked={formData.achAuthorization}
            onChange={(e) =>
              setFormData({
                ...formData,
                achAuthorization: e.target.checked,
              })
            }
            className="mt-1"
          />
          <span className="text-sm">
            I authorize automatic ACH withdrawals for loan repayment
          </span>
        </label>

        <label className="flex items-start gap-3 cursor-pointer">
          <input
            type="checkbox"
            checked={formData.confessionOfJudgment}
            onChange={(e) =>
              setFormData({
                ...formData,
                confessionOfJudgment: e.target.checked,
              })
            }
            className="mt-1"
          />
          <span className="text-sm">
            I agree to the{" "}
            <span className="text-blue-600 underline">
              terms and conditions
            </span>
          </span>
        </label>

        <label className="flex items-start gap-3 cursor-pointer">
          <input
            type="checkbox"
            checked={formData.arbitrationAgreement}
            onChange={(e) =>
              setFormData({
                ...formData,
                arbitrationAgreement: e.target.checked,
              })
            }
            className="mt-1"
          />
          <span className="text-sm">
            I agree to resolve disputes through binding arbitration
          </span>
        </label>

        <label className="flex items-start gap-3 cursor-pointer">
          <input
            type="checkbox"
            checked={formData.wageAssignment}
            onChange={(e) =>
              setFormData({
                ...formData,
                wageAssignment: e.target.checked,
              })
            }
            className="mt-1"
          />
          <span className="text-sm">
            I authorize wage assignment if necessary for collection
          </span>
        </label>

        <label className="flex items-start gap-3 cursor-pointer">
          <input
            type="checkbox"
            checked={formData.collectionCallsToEmployer}
            onChange={(e) =>
              setFormData({
                ...formData,
                collectionCallsToEmployer: e.target.checked,
              })
            }
            className="mt-1"
          />
          <span className="text-sm">
            I consent to contact at all provided numbers including work
          </span>
        </label>
      </div>
      <div className="bg-gray-50 p-4 rounded-lg">
        <h4 className="font-semibold mb-2">Your Loan Details:</h4>
        <div className="space-y-1 text-sm">
          <div className="flex justify-between">
            <span>Loan Amount:</span>
            <span>${loanAmount.toFixed(2)}</span>
          </div>
          <div className="flex justify-between">
            <span>Finance Charge (Fee):</span>
            <span>${deceptiveLoan.fees.origination.toFixed(2)}</span>
          </div>
          <div className="flex justify-between font-semibold pt-2 border-t">
            <span>Total Due in 14 days:</span>
            <span>
              ${(loanAmount + deceptiveLoan.fees.origination).toFixed(2)}
            </span>
          </div>
        </div>
        <p
          className="text-xxs text-gray-400 mt-4"
          style={{ fontSize: "0.6rem", lineHeight: "0.8rem" }}
        >
          Representative Example: Borrow $500 for 14 days. Amount payable: $650.
          Interest p.a: 782.14% (fixed). Representative{" "}
          {deceptiveLoan.apr.toFixed(2)}% APR.
        </p>
      </div>
      <div className="flex justify-between gap-4">
        <Button onClick={onCancel} variant="outline" className="px-6">
          Cancel
        </Button>
        <Button
          onClick={onNext}
          className="px-8 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700"
        >
          Continue
          <ChevronRight className="ml-2 w-4 h-4" />
        </Button>
      </div>
    </div>
  );
};

export default TermsTrapStep;
