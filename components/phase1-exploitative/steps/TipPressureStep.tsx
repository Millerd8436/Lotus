"use client";

import { Button } from "@/components/shared/Button";
import { ChevronRight, Heart } from "lucide-react";
import React, { useState, useEffect } from "react";

interface TipPressureStepProps {
  onNext: () => void;
  onCancel: () => void;
  phase: 1 | 3;
  onPatternDetected: (pattern: string, severity: number) => void;
}

const TipPressureStep: React.FC<TipPressureStepProps> = ({
  onNext,
  onCancel,
  phase,
  onPatternDetected,
}) => {
  const [tipAmount, setTipAmount] = useState(0);
  const loanAmount = 300; // Example value

  useEffect(() => {
    if (phase === 3) {
      onPatternDetected(
        "Social pressure is used to encourage users to add a 'tip' to their loan.",
        6
      );
    }
  }, [phase, onPatternDetected]);

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-br from-purple-50 to-pink-50 p-6 rounded-lg border-2 border-purple-200">
        <h3 className="text-xl font-semibold mb-4 flex items-center gap-2">
          <Heart className="w-6 h-6 text-pink-500" />
          Support Our Mission
        </h3>
        <p className="mb-4 text-gray-700">
          Tips help us keep our service free and accessible to everyone. Most
          customers tip between 15-20% to support our team.
        </p>
        <div className="grid grid-cols-4 gap-2 mb-4">
          <button
            onClick={() => setTipAmount(Math.round(loanAmount * 0.1))}
            className={`p-3 rounded-lg border-2 transition-all ${
              tipAmount === Math.round(loanAmount * 0.1)
                ? "border-purple-500 bg-purple-100"
                : "border-gray-300"
            }`}
          >
            10%
            <div className="text-xs">${Math.round(loanAmount * 0.1)}</div>
          </button>
          <button
            onClick={() => setTipAmount(Math.round(loanAmount * 0.15))}
            className={`p-3 rounded-lg border-2 transition-all relative ${
              tipAmount === Math.round(loanAmount * 0.15)
                ? "border-purple-500 bg-purple-100"
                : "border-gray-300"
            }`}
          >
            <div className="absolute -top-2 -right-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full">
              Popular
            </div>
            15%
            <div className="text-xs">${Math.round(loanAmount * 0.15)}</div>
          </button>
          <button
            onClick={() => setTipAmount(Math.round(loanAmount * 0.2))}
            className={`p-3 rounded-lg border-2 transition-all ${
              tipAmount === Math.round(loanAmount * 0.2)
                ? "border-purple-500 bg-purple-100"
                : "border-gray-300"
            }`}
          >
            20%
            <div className="text-xs">${Math.round(loanAmount * 0.2)}</div>
          </button>
          <button
            onClick={() => setTipAmount(0)}
            className="p-3 rounded-lg border-2 border-gray-200 text-gray-400"
          >
            Other
          </button>
        </div>
        <div className="text-center">
          <div className="text-2xl font-bold text-purple-600">
            Your tip: ${tipAmount}
          </div>
          <div className="text-sm text-gray-600 mt-1">
            Total to repay: ${loanAmount + tipAmount}
          </div>
        </div>
      </div>
      <div className="flex justify-between gap-4">
        <Button onClick={onCancel} variant="outline" className="px-6">
          Cancel
        </Button>
        <Button
          onClick={onNext}
          className="px-8 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700"
        >
          Continue
          <ChevronRight className="ml-2 w-4 h-4" />
        </Button>
      </div>
    </div>
  );
};

export default TipPressureStep;

