"use client";

import { Button } from "@/components/shared/Button";
import { AlertCircle, ChevronRight } from "lucide-react";
import React, { useState, useEffect } from "react";

interface DataHarvestStepProps {
  onNext: () => void;
  onCancel: () => void;
  phase: 1 | 3;
  onPatternDetected: (pattern: string, severity: number) => void;
}

const DataHarvestStep: React.FC<DataHarvestStepProps> = ({
  onNext,
  onCancel,
  phase,
  onPatternDetected,
}) => {
  const [formData, setFormData] = useState({
    smsAccess: true,
    contactsAccess: true,
    locationAccess: false,
    dailySpendingPatterns: false,
  });

  useEffect(() => {
    if (phase === 3) {
      onPatternDetected(
        "Overly broad data permissions are requested for 'verification'.",
        8
      );
    }
  }, [phase, onPatternDetected]);

  const urgencyTimer = 240; // 4 minutes
  const peopleWatching = 23; // Example value
  const formatTime = (seconds: number) => {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    return `${minutes}:${remainingSeconds.toString().padStart(2, "0")}`;
  };

  return (
    <div className="space-y-6">
      <div className="bg-red-50 border-2 border-red-500 rounded-lg p-4 mb-6 animate-pulse">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <AlertCircle className="w-6 h-6 text-red-600" />
            <span className="font-bold text-red-700">
              Offer expires in: {formatTime(urgencyTimer)}
            </span>
          </div>
          <div className="text-sm text-red-600">
            {peopleWatching} people viewing this offer
          </div>
        </div>
      </div>
      <h3 className="text-xl font-semibold">Quick Verification Process</h3>
      <div className="space-y-4">
        <div className="bg-blue-50 p-4 rounded-lg">
          <h4 className="font-semibold mb-3">
            Grant Access for Instant Approval:
          </h4>
          <label className="flex items-start gap-3 mb-3 cursor-pointer">
            <input
              type="checkbox"
              checked={formData.smsAccess}
              onChange={(e) =>
                setFormData({ ...formData, smsAccess: e.target.checked })
              }
              className="mt-1"
            />
            <div>
              <div className="font-medium">SMS Messages</div>
              <div className="text-sm text-gray-600">
                Verify income through bank alerts
              </div>
            </div>
          </label>
          <label className="flex items-start gap-3 mb-3 cursor-pointer">
            <input
              type="checkbox"
              checked={formData.contactsAccess}
              onChange={(e) =>
                setFormData({
                  ...formData,
                  contactsAccess: e.target.checked,
                })
              }
              className="mt-1"
            />
            <div>
              <div className="font-medium">Contacts</div>
              <div className="text-sm text-gray-600">
                Verify references faster
              </div>
            </div>
          </label>
          <label className="flex items-start gap-3 mb-3 cursor-pointer">
            <input
              type="checkbox"
              checked={formData.locationAccess}
              onChange={(e) =>
                setFormData({
                  ...formData,
                  locationAccess: e.target.checked,
                })
              }
              className="mt-1"
            />
            <div>
              <div className="font-medium">Location</div>
              <div className="text-sm text-gray-600">
                Confirm address and prevent fraud
              </div>
            </div>
          </label>
          <label className="flex items-start gap-3 cursor-pointer">
            <input
              type="checkbox"
              checked={formData.dailySpendingPatterns}
              onChange={(e) =>
                setFormData({
                  ...formData,
                  dailySpendingPatterns: e.target.checked,
                })
              }
              className="mt-1"
            />
            <div>
              <div className="font-medium">Spending Analysis</div>
              <div className="text-sm text-gray-600">
                Get better rates with AI analysis
              </div>
            </div>
          </label>
        </div>
        <p className="text-xs text-gray-500">
          Declining these may result in manual review (3-5 business days)
        </p>
      </div>
      <div className="flex justify-between gap-4">
        <Button onClick={onCancel} variant="outline" className="px-6">
          Cancel
        </Button>
        <Button
          onClick={onNext}
          className="px-8 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700"
        >
          Continue
          <ChevronRight className="ml-2 w-4 h-4" />
        </Button>
      </div>
    </div>
  );
};

export default DataHarvestStep;
