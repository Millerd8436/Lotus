"use client";

import {
  BehavioralEvent,
  BehavioralProfile,
  BehavioralPsychologyEngine,
  PredictedAction,
} from "@/lib/core/behavioral-engine";
import {
  StateRegulation,
  getRegulationForState,
} from "@/lib/state-regulations";
import React, { useEffect, useMemo, useState } from "react";
import ElectronicSignatureSimulator from "./ElectronicSignatureSimulator";
import IncomeVerificationSimulator from "./IncomeVerificationSimulator";
import RealtimeAnalysisMonitor from "./predatory/RealtimeAnalysisMonitor";

/**
 * Phase 1: Exploitative Payday Loan Website
 *
 * A comprehensive simulation of predatory lending practices that consolidates:
 * - All deceptive patterns from research
 * - Progressive disclosure and drip pricing
 * - ACH exploitation and rollover traps
 * - Fake urgency and social proof
 * - Pre-selected add-ons and hidden fees
 * - Realistic Texas-style predatory lending (664% APR)
 *
 * This represents the worst of payday lending designed to trap vulnerable borrowers
 */

// ADVANCED, REALISTIC FORM DATA (Based on industry analysis)
interface RealisticFormData {
  // Personal Information
  firstName: string;
  lastName: string;
  middleName?: string;
  email: string;
  phone: string;
  alternatePhone?: string;
  ssn: string;
  dob: string;

  // Address Information
  streetAddress: string;
  city: string;
  state: string;
  zipCode: string;
  timeAtAddress: string;
  housingType: "own" | "rent" | "other";
  monthlyRent?: number;

  // Employment Information
  employmentStatus: "employed" | "self-employed" | "benefits" | "retired";
  employer: string;
  jobTitle: string;
  workPhone: string;
  timeAtJob: string;
  payFrequency: "weekly" | "biweekly" | "monthly" | "other";
  nextPayDate: string;
  monthlyIncome: number;
  incomeSource: "employment" | "benefits" | "other";

  // Banking Information
  bankName: string;
  accountType: "checking" | "savings";
  routingNumber: string;
  accountNumber: string;
  bankingTime: string;
  onlineBankingUsername?: string;

  // Identity Verification
  driversLicenseNumber: string;
  driversLicenseState: string;
  driversLicenseExp: string;

  // References (for collections)
  reference1Name: string;
  reference1Phone: string;
  reference1Relationship: string;
  reference2Name: string;
  reference2Phone: string;
  reference2Relationship: string;

  // Loan Information
  loanAmount: number;
  loanPurpose: string;
  previousPaydayLoan: boolean;

  // Consents (mostly pre-checked)
  achAuthorization: boolean;
  electronicSignature: boolean;
  creditCheck: boolean;
  dataSharing: boolean;
  marketingConsent: boolean;
  autoRenewal: boolean;
  loanInsurance: boolean;
  expressProcessing: boolean;
}

interface LoanTerms {
  principal: number;
  advertised_fee: number;
  hidden_fees: {
    processing: number;
    verification: number;
    service: number;
    risk_assessment: number;
    platform: number;
    insurance: number;
  };
  total_fees: number;
  total_due: number;
  deceptive_apr: string;
  real_apr: number;
  rollover_fee: number;
  nsf_fee: number;
  dueDate: string; // Added for final terms
}

const Phase1ExploitativeWebsite: React.FC = () => {
  const [currentStep, setCurrentStep] = useState("homepage");
  const [formData, setFormData] = useState<RealisticFormData>({
    // Personal Info
    firstName: "",
    lastName: "",
    middleName: "",
    email: "",
    phone: "",
    alternatePhone: "",
    ssn: "",
    dob: "",

    // Address Info
    streetAddress: "",
    city: "",
    state: "TX",
    zipCode: "",
    timeAtAddress: "1-2 years",
    housingType: "rent",
    monthlyRent: 1200,

    // Employment Info
    employmentStatus: "employed",
    employer: "",
    jobTitle: "",
    workPhone: "",
    timeAtJob: "2+ years",
    payFrequency: "biweekly",
    nextPayDate: "",
    monthlyIncome: 3000,
    incomeSource: "employment",

    // Banking Info
    bankName: "",
    accountType: "checking",
    routingNumber: "",
    accountNumber: "",
    bankingTime: "5+ years",
    onlineBankingUsername: "",

    // Identity Verification
    driversLicenseNumber: "",
    driversLicenseState: "TX",
    driversLicenseExp: "",

    // References
    reference1Name: "",
    reference1Phone: "",
    reference1Relationship: "",
    reference2Name: "",
    reference2Phone: "",
    reference2Relationship: "",

    // Loan Info
    loanAmount: 300,
    loanPurpose: "Emergency",
    previousPaydayLoan: false,

    // Consents
    achAuthorization: false,
    electronicSignature: false,
    creditCheck: true,
    dataSharing: true,
    marketingConsent: true,
    autoRenewal: true,
    loanInsurance: true,
    expressProcessing: true,
  });

  const [urgencyTimer, setUrgencyTimer] = useState(300); // 5 minutes
  const [fakeActivity, setFakeActivity] = useState<string[]>([]);
  const [spotsLeft, setSpotsLeft] = useState(11);
  const [showHiddenFees, setShowHiddenFees] = useState(false);
  const [loanTerms, setLoanTerms] = useState<LoanTerms | null>(null);
  const [currentRegulation, setCurrentRegulation] =
    useState<StateRegulation | null>(null);
  // Vulnerability score logic removed; keeping constant at 0 to hide related UI
  const vulnerabilityScore = 0;
  const [rolloverCount, setRolloverCount] = useState(0);
  const [achAttempts, setAchAttempts] = useState(0); // Added for rollover trap
  const [totalBankFees, setTotalBankFees] = useState(0); // Added for rollover trap
  const [platformTip, setPlatformTip] = useState(15.0); // Pre-filled deceptive tip

  // Behavioral Engine Integration
  const engine = useMemo(() => new BehavioralPsychologyEngine(), []);
  const [behavioralProfile, setBehavioralProfile] = useState<BehavioralProfile>(
    engine.getProfile()
  );
  const [prediction, setPrediction] = useState<PredictedAction>(
    "Seeking lowest payment"
  );

  const handleUserInteraction = (
    eventType: BehavioralEvent["eventType"],
    elementId: string
  ) => {
    const event: BehavioralEvent = {
      eventType,
      elementId,
      timestamp: Date.now(),
    };
    const newProfile = engine.processEvent(event);
    setBehavioralProfile(newProfile);
    setPrediction(engine.predictNextAction());
  };

  useEffect(() => {
    const regulation = getRegulationForState(formData.state);
    setCurrentRegulation(regulation);
  }, [formData.state]);

  // Fake urgency timer countdown
  useEffect(() => {
    const timer = setInterval(() => {
      setUrgencyTimer((prev) => {
        if (prev <= 0) return 300; // Reset to create false scarcity
        return prev - 1;
      });
    }, 1000);
    return () => clearInterval(timer);
  }, []);

  // Fake social proof activity
  useEffect(() => {
    const activities = [
      "Jennifer from Dallas just got approved for $500! 💰",
      "Mike from Houston received $300 in 8 minutes! ⚡",
      "Sarah from Austin just renewed her loan! 🔄",
      "David from San Antonio got emergency cash! 🚨",
      "Lisa from Fort Worth was approved instantly! ✅",
      "Robert from El Paso got $750 approved! 💵",
    ];

    const activityTimer = setInterval(() => {
      setFakeActivity((prev: string[]) => {
        const newActivity: string =
          activities[Math.floor(Math.random() * activities.length)] ||
          "New application approved!";
        return [...prev.slice(-2), newActivity];
      });

      // Occasionally decrease "spots left" to create scarcity
      if (Math.random() < 0.3) {
        setSpotsLeft((prev) => (prev > 1 ? prev - 1 : 3));
      }
    }, 8000);

    return () => clearInterval(activityTimer);
  }, []);

  // Calculate predatory loan terms with progressive disclosure
  const calculateLoanTerms = (amount: number, step: string): LoanTerms => {
    const base_fee = amount * 0.15; // Start low, add fees progressively

    const hidden_fees = {
      processing: step === "basic_info" ? 25 : 0,
      verification: step === "financial_info" ? 15 : 0,
      service: step === "verification" ? 20 : 0,
      risk_assessment:
        step === "verification" ? 30 + vulnerabilityScore * 5 : 0,
      platform: step === "addons" ? 20 : 0,
      insurance: formData.loanInsurance ? 25 : 0,
    };

    const total_hidden_fees = Object.values(hidden_fees).reduce(
      (sum, fee) => sum + fee,
      0
    );
    const total_fees = base_fee + total_hidden_fees;
    const total_due = amount + total_fees;
    const real_apr = (total_fees / amount) * (365 / 14) * 100;

    return {
      principal: amount,
      advertised_fee: base_fee,
      hidden_fees,
      total_fees,
      total_due,
      deceptive_apr: "Low Daily Rate!", // Hide real APR
      real_apr: Math.round(real_apr),
      rollover_fee: 50,
      nsf_fee: 35,
      dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000)
        .toISOString()
        .slice(0, 10), // Added for final terms
    };
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, "0")}`;
  };

  const handleInputChange = (field: keyof RealisticFormData, value: any) => {
    setFormData((prev) => ({ ...prev, [field]: value }));
    if (field === "loanAmount") {
      setLoanTerms(calculateLoanTerms(value, currentStep));
    }
  };

  const nextStep = () => {
    const steps = [
      "homepage",
      "basic_info",
      "financial_info",
      "income_verification",
      "verification",
      "addons",
      "final_terms",
      "esignature",
      "rollover_trap",
    ];
    const currentIndex = steps.indexOf(currentStep);
    if (currentIndex < steps.length - 1) {
      const nextStepValue = steps[currentIndex + 1];
      if (nextStepValue) {
        setCurrentStep(nextStepValue);
        setLoanTerms(calculateLoanTerms(formData.loanAmount, nextStepValue));
      }
    }
  };

  const renderHomepage = () => (
    <div className="min-h-screen bg-gradient-to-br from-red-500 via-orange-500 to-yellow-500">
      {/* Fake Urgency Header */}
      <div className="bg-red-600 text-white text-center py-2 text-sm font-bold animate-pulse">
        ⚠️ SPECIAL OFFER EXPIRES IN {formatTime(urgencyTimer)} ⚠️ Only{" "}
        {spotsLeft} spots left in your area!
      </div>

      {/* Hero Section with Deceptive Claims */}
      <div className="container mx-auto px-4 py-8">
        <div className="text-center text-white mb-8">
          <h1 className="text-6xl font-black mb-4 drop-shadow-lg animate-bounce">
            💰 INSTANT CASH $100-$1,500 💰
          </h1>
          <h2 className="text-3xl font-bold mb-4 text-yellow-300">
            ✅ NO CREDIT CHECK ✅ APPROVED IN MINUTES ✅ FUNDS TODAY
          </h2>
          <div className="text-2xl font-semibold mb-6 bg-red-700 bg-opacity-80 inline-block px-6 py-2 rounded-lg">
            🔥 EMERGENCY CASH WHEN BANKS SAY NO! 🔥
          </div>
          <div className="text-lg text-yellow-200 mb-4">
            "Instant approval, bank deposit in minutes, flexible repayment"
          </div>
        </div>

        <div className="grid md:grid-cols-2 gap-8 max-w-7xl mx-auto">
          {/* Left: Trust Badges & Social Proof - Enhanced */}
          <div className="bg-white rounded-xl shadow-2xl p-6 border-4 border-yellow-400">
            <h3 className="text-3xl font-bold text-gray-800 mb-6 text-center bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent">
              🏆 TRUSTED BY THOUSANDS 🏆
            </h3>

            {/* Enhanced Trust Badges */}
            <div className="grid grid-cols-2 gap-4 mb-6">
              <div className="text-center p-4 bg-green-100 rounded-xl shadow-lg border-2 border-green-300 hover:scale-105 transition-transform">
                <div className="text-4xl mb-2 animate-pulse">⚡</div>
                <div className="font-bold text-green-800 text-lg">
                  INSTANT APPROVAL
                </div>
                <div className="text-sm text-green-600">2 Minute Process</div>
                <div className="text-xs text-green-500 mt-1">
                  98% Approval Rate
                </div>
              </div>
              <div className="text-center p-4 bg-blue-100 rounded-xl shadow-lg border-2 border-blue-300 hover:scale-105 transition-transform">
                <div className="text-4xl mb-2">🔒</div>
                <div className="font-bold text-blue-800 text-lg">
                  SECURE & SAFE
                </div>
                <div className="text-sm text-blue-600">256-Bit SSL</div>
                <div className="text-xs text-blue-500 mt-1">Military Grade</div>
              </div>
              <div className="text-center p-4 bg-purple-100 rounded-xl shadow-lg border-2 border-purple-300 hover:scale-105 transition-transform">
                <div className="text-4xl mb-2">⭐</div>
                <div className="font-bold text-purple-800 text-lg">
                  4.9★ RATING
                </div>
                <div className="text-sm text-purple-600">15,000+ Reviews</div>
                <div className="text-xs text-purple-500 mt-1">
                  TrustPilot Verified
                </div>
              </div>
              <div className="text-center p-4 bg-yellow-100 rounded-xl shadow-lg border-2 border-yellow-300 hover:scale-105 transition-transform">
                <div className="text-4xl mb-2">📱</div>
                <div className="font-bold text-yellow-800 text-lg">
                  MOBILE DEPOSIT
                </div>
                <div className="text-sm text-yellow-600">Direct to Bank</div>
                <div className="text-xs text-yellow-500 mt-1">
                  Same Day Funding
                </div>
              </div>
            </div>

            {/* Icons with short bullets */}
            <div className="grid grid-cols-3 gap-3 mb-6 text-center">
              <div className="p-3 bg-gray-50 rounded-lg">
                <div className="text-2xl mb-1">✅</div>
                <div className="text-xs font-semibold text-gray-700">
                  Instant Approval
                </div>
              </div>
              <div className="p-3 bg-gray-50 rounded-lg">
                <div className="text-2xl mb-1">💰</div>
                <div className="text-xs font-semibold text-gray-700">
                  Bank Deposit
                </div>
              </div>
              <div className="p-3 bg-gray-50 rounded-lg">
                <div className="text-2xl mb-1">🔄</div>
                <div className="text-xs font-semibold text-gray-700">
                  Flexible Terms
                </div>
              </div>
            </div>

            {/* Enhanced Social Proof Activity */}
            <div className="bg-gray-50 rounded-lg p-4 mb-4 border-2 border-gray-200">
              <h4 className="font-bold text-gray-800 mb-3 flex items-center">
                🔴 LIVE ACTIVITY{" "}
                <div className="w-3 h-3 bg-green-500 rounded-full ml-2 animate-ping"></div>
              </h4>
              <div className="space-y-2 max-h-40 overflow-y-auto">
                {fakeActivity.map((activity, index) => (
                  <div
                    key={index}
                    className="text-sm text-gray-700 bg-white p-3 rounded-lg border-l-4 border-green-400 shadow-sm"
                  >
                    {activity}
                    <div className="text-xs text-gray-500 mt-1">
                      {Math.floor(Math.random() * 5) + 1} minute
                      {Math.floor(Math.random() * 5) + 1 > 1 ? "s" : ""} ago
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Enhanced Testimonials with photos */}
            <div className="space-y-4">
              <div className="bg-green-50 p-4 rounded-lg border-l-4 border-green-400 flex items-start space-x-3">
                <div className="w-10 h-10 bg-green-200 rounded-full flex items-center justify-center text-green-700 font-bold">
                  M
                </div>
                <div className="flex-1">
                  <div className="text-sm text-gray-700 font-medium">
                    "Got $500 in 10 minutes! Saved my rent payment!" ⭐⭐⭐⭐⭐
                  </div>
                  <div className="text-xs text-gray-500">
                    - Maria S., Dallas TX • Verified Customer
                  </div>
                </div>
              </div>
              <div className="bg-blue-50 p-4 rounded-lg border-l-4 border-blue-400 flex items-start space-x-3">
                <div className="w-10 h-10 bg-blue-200 rounded-full flex items-center justify-center text-blue-700 font-bold">
                  J
                </div>
                <div className="flex-1">
                  <div className="text-sm text-gray-700 font-medium">
                    "Easy process, no paperwork hassle! Best service!"
                    ⭐⭐⭐⭐⭐
                  </div>
                  <div className="text-xs text-gray-500">
                    - John D., Houston TX • Verified Customer
                  </div>
                </div>
              </div>
              <div className="bg-purple-50 p-4 rounded-lg border-l-4 border-purple-400 flex items-start space-x-3">
                <div className="w-10 h-10 bg-purple-200 rounded-full flex items-center justify-center text-purple-700 font-bold">
                  S
                </div>
                <div className="flex-1">
                  <div className="text-sm text-gray-700 font-medium">
                    "Life saver! No questions asked, got exactly what I needed!"
                    ⭐⭐⭐⭐⭐
                  </div>
                  <div className="text-xs text-gray-500">
                    - Sarah K., Austin TX • Verified Customer
                  </div>
                </div>
              </div>
            </div>

            {/* Customer satisfaction badge */}
            <div className="mt-4 text-center p-3 bg-gradient-to-r from-yellow-100 to-orange-100 rounded-lg border-2 border-yellow-300">
              <div className="text-2xl font-bold text-orange-700">
                🏆 4.8★ Customer Satisfaction
              </div>
              <div className="text-sm text-orange-600">
                Based on 15,247+ verified reviews
              </div>
            </div>
          </div>

          {/* Right: Enhanced Loan Calculator Component */}
          <div className="bg-white rounded-xl shadow-2xl p-6 border-4 border-green-400">
            <h3 className="text-3xl font-bold text-center text-gray-800 mb-6 bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent">
              💸 GET YOUR CASH NOW! 💸
            </h3>

            {/* Loan Amount Slider with Real-time Updates */}
            <div className="mb-6">
              <label className="block text-xl font-bold text-gray-700 mb-3">
                How much emergency cash do you need? 💰
              </label>
              <div className="relative mb-4">
                <input
                  type="range"
                  min="100"
                  max="1500"
                  step="50"
                  value={formData.loanAmount}
                  onChange={(e) =>
                    handleInputChange("loanAmount", parseInt(e.target.value))
                  }
                  className="w-full h-6 bg-gradient-to-r from-green-400 via-yellow-400 to-red-500 rounded-lg appearance-none cursor-pointer slider-thumb"
                  style={{
                    background: `linear-gradient(to right, #10b981 0%, #f59e0b 50%, #ef4444 100%)`,
                  }}
                />
                <div className="flex justify-between text-sm text-gray-500 mt-2">
                  <span className="font-semibold">$100</span>
                  <span className="text-4xl font-black text-green-600 animate-pulse">
                    ${formData.loanAmount}
                  </span>
                  <span className="font-semibold">$1,500</span>
                </div>
              </div>
            </div>

            {/* Enhanced Payment Display with Hidden APR */}
            <div className="bg-gradient-to-r from-green-100 via-blue-100 to-purple-100 p-6 rounded-xl border-3 border-green-300 mb-6 shadow-lg">
              <h4 className="font-bold text-2xl text-green-700 mb-4 text-center animate-bounce">
                ✅ INSTANT PRE-APPROVAL! ✅
              </h4>

              <div className="grid grid-cols-2 gap-6 text-center mb-4">
                <div className="bg-white p-4 rounded-lg shadow-md border-2 border-green-200">
                  <div className="text-gray-600 text-sm font-medium">
                    You Get Today
                  </div>
                  <div className="text-4xl font-black text-green-600">
                    ${formData.loanAmount}
                  </div>
                  <div className="text-xs text-green-500">Direct Deposit</div>
                </div>
                <div className="bg-white p-4 rounded-lg shadow-md border-2 border-blue-200">
                  <div className="text-gray-600 text-sm font-medium">
                    Simple Payment
                  </div>
                  <div className="text-4xl font-black text-blue-600">
                    $
                    {loanTerms
                      ? formData.loanAmount + loanTerms.advertised_fee
                      : formData.loanAmount + 45}
                  </div>
                  <div className="text-xs text-blue-500">In 14 Days</div>
                </div>
              </div>

              {/* Deceptive Rate Display */}
              <div className="text-center space-y-2">
                <div className="text-lg text-gray-600">
                  Low Daily Rate: Only{" "}
                  <span className="font-bold text-green-600">
                    $
                    {loanTerms
                      ? (loanTerms.advertised_fee / 14).toFixed(2)
                      : "3.21"}
                  </span>{" "}
                  per day
                </div>
                <div className="text-sm text-gray-500">
                  That's less than a coffee! ☕
                </div>
                <div
                  className="text-xs text-gray-400 underline cursor-pointer hover:text-gray-600"
                  onClick={() => setShowHiddenFees(!showHiddenFees)}
                >
                  {showHiddenFees ? "Hide" : "View"} Full Details
                </div>
                {showHiddenFees && (
                  <div className="text-xs text-red-600 mt-3 p-3 bg-red-50 rounded-lg border border-red-200">
                    <div className="font-bold">⚠️ FULL DISCLOSURE ⚠️</div>
                    <div>
                      Real APR: {currentRegulation?.apr_range || "391%"}
                    </div>
                    <div>Additional fees may apply based on your profile</div>
                    <div>
                      Total cost may increase during application process
                    </div>
                  </div>
                )}
              </div>

              {/* Fake urgency indicators */}
              <div className="mt-4 flex items-center justify-center space-x-4 text-sm">
                <div className="flex items-center space-x-1 text-orange-600">
                  <div className="w-2 h-2 bg-orange-500 rounded-full animate-pulse"></div>
                  <span>Rate locks in 05:12</span>
                </div>
                <div className="text-red-600 font-bold">
                  Only 3 loans left at this rate!
                </div>
              </div>
            </div>

            {/* Simple Form Overlay */}
            <div className="space-y-4">
              <div className="text-center mb-4">
                <h5 className="text-xl font-bold text-gray-800">
                  Quick Start - Just 3 Fields!
                </h5>
                <div className="text-sm text-gray-600">
                  Complete application takes under 2 minutes
                </div>
              </div>

              <div className="space-y-3">
                <input
                  type="text"
                  placeholder="Full Name *"
                  value={formData.firstName}
                  onChange={(e) =>
                    handleInputChange("firstName", e.target.value)
                  }
                  className="w-full p-4 border-2 border-gray-300 rounded-lg focus:border-green-500 text-lg font-medium"
                />
                <input
                  type="email"
                  placeholder="Email Address *"
                  value={formData.email}
                  onChange={(e) => handleInputChange("email", e.target.value)}
                  className="w-full p-4 border-2 border-gray-300 rounded-lg focus:border-green-500 text-lg font-medium"
                />
                <input
                  type="tel"
                  placeholder="Phone Number *"
                  value={formData.phone}
                  onChange={(e) => handleInputChange("phone", e.target.value)}
                  className="w-full p-4 border-2 border-gray-300 rounded-lg focus:border-green-500 text-lg font-medium"
                />
              </div>
            </div>

            {/* Enhanced CTA Button */}
            <button
              onClick={nextStep}
              className="w-full mt-6 bg-gradient-to-r from-green-500 via-blue-600 to-purple-600 hover:from-green-600 hover:via-blue-700 hover:to-purple-700 text-white font-black text-2xl py-5 px-6 rounded-xl shadow-xl transform hover:scale-105 transition-all duration-200 animate-pulse border-4 border-yellow-400"
            >
              🚀 GET MY EMERGENCY CASH NOW! 🚀
            </button>

            <div className="text-center mt-4 space-y-2">
              <div className="text-green-600 font-bold text-xl">
                ✅ INSTANT DECISION IN 30 SECONDS ✅
              </div>
              <div className="text-sm text-gray-600">
                * No paperwork • No waiting • No credit check required
              </div>
              <div className="text-xs text-gray-500">
                Funds deposited same day for qualified applicants
              </div>
            </div>

            {/* Security badges */}
            <div className="flex justify-center space-x-4 mt-4">
              <div className="text-center">
                <div className="text-2xl">🔒</div>
                <div className="text-xs text-gray-600">SSL Secure</div>
              </div>
              <div className="text-center">
                <div className="text-2xl">🏛️</div>
                <div className="text-xs text-gray-600">FDIC Bank</div>
              </div>
              <div className="text-center">
                <div className="text-2xl">🛡️</div>
                <div className="text-xs text-gray-600">Encrypted</div>
              </div>
            </div>
          </div>
        </div>

        {/* Bottom Enhanced Urgency Section */}
        <div className="text-center mt-8 bg-gradient-to-r from-red-600 via-orange-600 to-yellow-600 text-white p-6 rounded-xl shadow-2xl border-4 border-yellow-400">
          <div className="text-3xl font-bold mb-3 animate-bounce">
            ⏰ DON'T MISS OUT! ⏰
          </div>
          <div className="text-xl mb-2">
            This exclusive pre-approval expires in {formatTime(urgencyTimer)}!
          </div>
          <div className="text-lg mb-3">
            Only {spotsLeft} instant approvals left in your area today!
          </div>
          <div className="text-sm text-yellow-200">
            Next available rate may be significantly higher • Secure your low
            rate now!
          </div>
        </div>

        {/* Fake scarcity labels */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6 text-center">
          <div className="bg-red-100 text-red-800 p-3 rounded-lg border-2 border-red-300">
            <div className="font-bold">⚠️ LIMITED TIME</div>
            <div className="text-sm">Special approval rate</div>
          </div>
          <div className="bg-orange-100 text-orange-800 p-3 rounded-lg border-2 border-orange-300">
            <div className="font-bold">🔥 HIGH DEMAND</div>
            <div className="text-sm">347 applications today</div>
          </div>
          <div className="bg-yellow-100 text-yellow-800 p-3 rounded-lg border-2 border-yellow-300">
            <div className="font-bold">⭐ EXCLUSIVE</div>
            <div className="text-sm">Pre-qualified members only</div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderBasicInfo = () => (
    <div className="min-h-screen bg-gray-50 py-8">
      {/* Persistent Fake Urgency Header */}
      <div className="bg-red-600 text-white text-center py-2 text-sm font-bold animate-pulse sticky top-0 z-10">
        ⚠️ Your rate is held for {formatTime(urgencyTimer)} ⚠️ Application
        expires soon!
      </div>
      <div className="container mx-auto px-4 max-w-3xl">
        {/* Deceptive Progress Header */}
        <div className="bg-white rounded-lg shadow-lg p-6 mb-6 border-l-4 border-green-500 mt-4">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-3xl font-bold text-gray-800">
              📝 Almost Done! (Step 2 of 2) ✅
            </h2>
            <div className="bg-green-600 text-white px-4 py-2 rounded-full font-bold animate-pulse">
              ✅ PRE-APPROVED
            </div>
          </div>

          {/* Progressive disclosure warning */}
          <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4">
            <div className="text-yellow-800 font-bold text-lg">
              ⚠️ Additional Verification Required: +$25 Processing Fee
            </div>
            <div className="text-yellow-700 text-sm mt-1">
              This one-time fee ensures instant approval and same-day funding
            </div>
          </div>

          {/* Fake urgency reminder */}
          <div className="bg-red-50 border border-red-200 rounded-lg p-3 mb-4">
            <div className="text-red-700 font-bold text-center">
              ⏰ Your pre-approval expires in {formatTime(urgencyTimer)} •
              Complete now to secure your rate!
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            <input
              type="text"
              placeholder="Last Name *"
              value={formData.lastName}
              onChange={(e) => handleInputChange("lastName", e.target.value)}
              className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
            />
            <input
              type="date"
              placeholder="Date of Birth *"
              value={formData.dob}
              onChange={(e) => handleInputChange("dob", e.target.value)}
              className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
            />
          </div>

          <input
            type="text"
            placeholder="Social Security Number (Required for Instant Approval) *"
            value={formData.ssn}
            onChange={(e) => handleInputChange("ssn", e.target.value)}
            className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg mb-4"
          />

          <select
            value={formData.incomeSource}
            onChange={(e) => handleInputChange("incomeSource", e.target.value)}
            className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg mb-6"
          >
            <option value="">Select Income Source *</option>
            <option value="employment">Full-Time Employment</option>
            <option value="part-time">Part-Time Employment</option>
            <option value="social_security">Social Security Benefits</option>
            <option value="disability">Disability Benefits</option>
            <option value="unemployment">Unemployment Benefits</option>
            <option value="pension">Pension/Retirement</option>
            <option value="other">Other Government Benefits</option>
          </select>

          {/* Updated loan terms with first hidden fee */}
          {loanTerms && (
            <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border-2 border-yellow-300 p-6 rounded-xl mb-6">
              <h4 className="font-bold text-xl text-yellow-800 mb-4 text-center">
                💰 Updated Loan Terms
              </h4>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-center">
                <div className="bg-white p-4 rounded-lg shadow-sm">
                  <div className="text-sm text-gray-600">Loan Amount</div>
                  <div className="text-2xl font-bold text-green-600">
                    ${loanTerms.principal}
                  </div>
                </div>
                <div className="bg-white p-4 rounded-lg shadow-sm">
                  <div className="text-sm text-gray-600">Base Fee</div>
                  <div className="text-xl font-bold text-blue-600">
                    ${loanTerms.advertised_fee}
                  </div>
                </div>
                <div className="bg-white p-4 rounded-lg shadow-sm border-2 border-red-300">
                  <div className="text-sm text-red-600 font-bold">
                    NEW: Processing Fee
                  </div>
                  <div className="text-xl font-bold text-red-600">
                    +${loanTerms.hidden_fees.processing}
                  </div>
                </div>
              </div>
              <div className="mt-4 text-center p-3 bg-white rounded-lg">
                <div className="text-sm text-gray-600">New Total Due</div>
                <div className="text-3xl font-bold text-orange-600">
                  $
                  {loanTerms.principal +
                    loanTerms.advertised_fee +
                    loanTerms.hidden_fees.processing}
                </div>
                <div className="text-xs text-gray-500 mt-1">
                  Still cheaper than overdraft fees or credit card cash
                  advances!
                </div>
              </div>
            </div>
          )}

          <button
            onClick={nextStep}
            className="w-full bg-gradient-to-r from-blue-500 to-green-600 text-white font-bold py-4 px-6 rounded-xl text-xl hover:from-blue-600 hover:to-green-700 transition-all duration-200 shadow-lg border-2 border-yellow-400"
          >
            Continue to Verification Step →
          </button>

          {/* Trust indicators */}
          <div className="flex justify-center items-center space-x-6 mt-4 text-sm text-gray-600">
            <div className="flex items-center space-x-1">
              <div className="text-green-500">🔒</div>
              <span>Secure SSL</span>
            </div>
            <div className="flex items-center space-x-1">
              <div className="text-blue-500">✅</div>
              <span>No Hard Credit Check</span>
            </div>
            <div className="flex items-center space-x-1">
              <div className="text-purple-500">⚡</div>
              <span>Instant Processing</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderFinancialInfo = () => (
    <div className="min-h-screen bg-gray-50 py-8">
      {/* Persistent Fake Urgency Header */}
      <div className="bg-red-600 text-white text-center py-2 text-sm font-bold animate-pulse sticky top-0 z-10">
        ⚠️ TIME IS RUNNING OUT: {formatTime(urgencyTimer)} ⚠️ Don't lose your
        spot!
      </div>
      <div className="container mx-auto px-4 max-w-3xl">
        <div className="bg-white rounded-lg shadow-lg p-6 border-l-4 border-blue-500 mt-4">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-3xl font-bold text-gray-800">
              💰 Financial Verification (Step 3 of 3)
            </h2>
            <div className="bg-blue-600 text-white px-4 py-2 rounded-full font-bold animate-pulse">
              PROCESSING...
            </div>
          </div>

          {/* Additional fees disclosure */}
          <div className="bg-orange-50 border-l-4 border-orange-400 p-4 mb-4">
            <div className="text-orange-800 font-bold text-lg">
              📋 Bank Verification Required: +$15 Service Fee
            </div>
            <div className="text-orange-700 text-sm mt-1">
              Secure connection to your bank for instant fund transfer
            </div>
          </div>

          {/* Vulnerability targeting */}
          {vulnerabilityScore > 3 && (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <div className="text-green-800 font-bold text-lg">
                🎯 Special Qualification: Higher Approval Amount Available!
              </div>
              <div className="text-green-700 text-sm">
                Based on your profile, you qualify for our premium emergency
                program
              </div>
            </div>
          )}

          <div className="space-y-4 mb-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <input
                type="number"
                placeholder="Monthly Income (Required) *"
                value={formData.monthlyIncome || ""}
                onChange={(e) =>
                  handleInputChange(
                    "monthlyIncome",
                    parseInt(e.target.value) || 0
                  )
                }
                className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
              />
              <input
                type="text"
                placeholder="Employer/Income Source *"
                value={formData.employer}
                onChange={(e) => handleInputChange("employer", e.target.value)}
                className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
              />
            </div>

            <input
              type="text"
              placeholder="Bank Name (Where you want funds deposited) *"
              value={formData.bankName}
              onChange={(e) => handleInputChange("bankName", e.target.value)}
              className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
            />

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <input
                type="text"
                placeholder="Account Number *"
                value={formData.accountNumber}
                onChange={(e) =>
                  handleInputChange("accountNumber", e.target.value)
                }
                className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
              />
              <input
                type="text"
                placeholder="Routing Number *"
                value={formData.routingNumber}
                onChange={(e) =>
                  handleInputChange("routingNumber", e.target.value)
                }
                className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-lg"
              />
            </div>
          </div>

          {/* Updated loan terms with second hidden fee */}
          {loanTerms && (
            <div className="bg-gradient-to-r from-orange-50 to-red-50 border-2 border-orange-300 p-6 rounded-xl mb-6">
              <h4 className="font-bold text-xl text-orange-800 mb-4 text-center">
                💳 Current Loan Breakdown
              </h4>
              <div className="space-y-3">
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Loan Principal</span>
                  <span className="text-xl font-bold text-green-600">
                    ${loanTerms.principal}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Processing Fee</span>
                  <span className="text-lg font-bold text-blue-600">
                    ${loanTerms.advertised_fee}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Identity Verification</span>
                  <span className="text-lg font-bold text-orange-600">
                    ${loanTerms.hidden_fees.processing}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg border-2 border-red-300">
                  <span className="text-red-700 font-bold">
                    Bank Connection Fee
                  </span>
                  <span className="text-lg font-bold text-red-600">
                    +${loanTerms.hidden_fees.verification}
                  </span>
                </div>
                <div className="border-t-2 border-gray-300 pt-3">
                  <div className="flex justify-between items-center bg-gradient-to-r from-yellow-100 to-orange-100 p-4 rounded-lg">
                    <span className="text-xl font-bold text-gray-800">
                      Total Due Amount
                    </span>
                    <span className="text-3xl font-bold text-red-600">
                      $
                      {loanTerms.principal +
                        loanTerms.advertised_fee +
                        loanTerms.hidden_fees.processing +
                        loanTerms.hidden_fees.verification}
                    </span>
                  </div>
                </div>
              </div>
              <div className="text-center mt-3 text-sm text-gray-600">
                All fees are clearly disclosed • No surprises later
              </div>
            </div>
          )}

          <button
            onClick={nextStep}
            className="w-full bg-gradient-to-r from-orange-500 to-red-600 text-white font-bold py-4 px-6 rounded-xl text-xl hover:from-orange-600 hover:to-red-700 transition-all duration-200 shadow-lg border-2 border-yellow-400"
          >
            Almost Done - Final Verification →
          </button>

          <div className="text-center mt-4">
            <div className="text-orange-600 font-bold text-lg">
              🔥 Your rate is locked for {formatTime(urgencyTimer)} more
            </div>
            <div className="text-sm text-gray-600 mt-1">
              Secure your emergency funds before this offer expires
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderIncomeVerification = () => (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-4xl mx-auto">
        <IncomeVerificationSimulator
          onVerificationComplete={(result) => {
            console.log("Verification complete:", result);
            // Here you could update the main form's state with verified data
            nextStep();
          }}
          vulnerabilityScore={5} // Pass a dynamic score if available
        />
      </div>
    </div>
  );

  const renderVerification = () => (
    <div className="min-h-screen bg-gray-50 py-8">
      {/* Persistent Fake Urgency Header */}
      <div className="bg-red-600 text-white text-center py-2 text-sm font-bold animate-pulse sticky top-0 z-10">
        ⚠️ FINAL CHANCE: {formatTime(urgencyTimer)} ⚠️ Complete your application
        NOW!
      </div>
      <div className="container mx-auto px-4 max-w-3xl">
        <div className="bg-white rounded-lg shadow-lg p-6 border-l-4 border-purple-500 mt-4">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-3xl font-bold text-gray-800">
              🔐 Final Security Verification
            </h2>
            <div className="bg-purple-600 text-white px-4 py-2 rounded-full font-bold">
              FINAL STEP
            </div>
          </div>

          {/* Maximum fee revelation + vulnerability targeting */}
          <div className="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
            <div className="text-red-800 font-bold text-lg">
              🛡️ Enhanced Security Package: +$50 Risk Assessment Fee
            </div>
            <div className="text-red-700 text-sm mt-1">
              Premium identity protection and fraud monitoring included
            </div>
            {vulnerabilityScore > 5 && (
              <div className="text-red-600 text-sm mt-2 font-semibold">
                ⚠️ Your profile requires additional security verification due to
                elevated risk factors
              </div>
            )}
          </div>

          <div className="space-y-4 mb-6">
            <input
              type="text"
              placeholder="Driver's License Number *"
              className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 text-lg"
            />

            <input
              type="text"
              placeholder="Mother's Maiden Name (Security Question) *"
              className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 text-lg"
            />

            <input
              type="text"
              placeholder="Emergency Contact Name & Phone *"
              className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 text-lg"
            />

            <select className="w-full p-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 text-lg">
              <option value="">How did you hear about us? *</option>
              <option value="google">Google Search</option>
              <option value="facebook">Facebook</option>
              <option value="friend">Friend Referral</option>
              <option value="previous">Previous Customer</option>
              <option value="emergency">Emergency Search</option>
            </select>
          </div>

          {/* Complete fee revelation */}
          {loanTerms && (
            <div className="bg-gradient-to-r from-red-50 to-pink-50 border-2 border-red-300 p-6 rounded-xl mb-6">
              <h4 className="font-bold text-2xl text-red-800 mb-4 text-center">
                🚨 COMPLETE LOAN BREAKDOWN
              </h4>
              <div className="space-y-2">
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Loan Amount</span>
                  <span className="text-xl font-bold text-green-600">
                    ${loanTerms.principal}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Processing Fee</span>
                  <span className="text-lg text-blue-600">
                    ${loanTerms.advertised_fee}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Identity Verification</span>
                  <span className="text-lg text-orange-600">
                    ${loanTerms.hidden_fees.processing}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg">
                  <span className="text-gray-700">Bank Connection</span>
                  <span className="text-lg text-purple-600">
                    ${loanTerms.hidden_fees.verification}
                  </span>
                </div>
                <div className="flex justify-between items-center bg-white p-3 rounded-lg border-2 border-red-400">
                  <span className="text-red-700 font-bold">
                    Security Assessment
                  </span>
                  <span className="text-lg font-bold text-red-600">
                    +$
                    {loanTerms.hidden_fees.service +
                      loanTerms.hidden_fees.risk_assessment}
                  </span>
                </div>
                <div className="border-t-2 border-red-400 pt-3">
                  <div className="flex justify-between items-center bg-gradient-to-r from-red-100 to-pink-100 p-4 rounded-lg">
                    <span className="text-xl font-bold text-gray-800">
                      TOTAL AMOUNT DUE
                    </span>
                    <span className="text-4xl font-bold text-red-700">
                      ${loanTerms.total_due}
                    </span>
                  </div>
                  <div className="text-center mt-2">
                    <div className="text-lg font-bold text-red-600">
                      Actual APR: {loanTerms.real_apr}%
                    </div>
                    <div className="text-sm text-gray-600">
                      Due in full in 14 days • ${loanTerms.rollover_fee}{" "}
                      rollover fee if extended
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          <button
            onClick={nextStep}
            className="w-full bg-gradient-to-r from-red-500 to-pink-600 text-white font-bold py-4 px-6 rounded-xl text-xl hover:from-red-600 hover:to-pink-700 transition-all duration-200 shadow-lg border-2 border-yellow-400"
          >
            Proceed to Authorization →
          </button>

          <div className="text-center mt-4">
            <div className="text-red-600 font-bold text-lg">
              🎯 Emergency funding secured • Total: $
              {loanTerms?.total_due || 395}
            </div>
            <div className="text-sm text-gray-600">
              Your funds will be available within minutes of final approval
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderAddons = () => (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="container mx-auto px-4 max-w-4xl">
        <div className="bg-white rounded-lg shadow-lg p-6 border-l-4 border-indigo-500">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-3xl font-bold text-gray-800">
              🛡️ Protection & Services
            </h2>
            <div className="bg-indigo-600 text-white px-4 py-2 rounded-full font-bold">
              RECOMMENDED
            </div>
          </div>

          {/* Confirmshaming intro */}
          <div className="bg-blue-50 border-l-4 border-blue-400 p-4 mb-6">
            <div className="text-blue-800 font-bold text-lg">
              🎯 Smart customers protect their emergency loans with these
              essential services
            </div>
            <div className="text-blue-700 text-sm mt-1">
              Our most successful borrowers choose these protection options for
              peace of mind
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
            {/* ACH Authorization with multiple attempts - Pre-checked */}
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 border-2 border-green-300 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  checked={formData.achAuthorization}
                  onChange={(e) =>
                    handleInputChange("achAuthorization", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-green-600"
                />
                <div className="flex-1">
                  <h4 className="font-bold text-lg text-green-800 mb-2">
                    🔄 Smart Payment Retry (RECOMMENDED)
                  </h4>
                  <p className="text-green-700 text-sm mb-3">
                    Automatically retry failed payments to avoid late fees. Our
                    system tries multiple times to ensure your payment goes
                    through successfully.
                  </p>
                  <div className="bg-white p-3 rounded-lg border border-green-200">
                    <div className="text-xs text-green-600 font-semibold">
                      ✅ BENEFITS:
                    </div>
                    <ul className="text-xs text-green-700 mt-1 space-y-1">
                      <li>• Prevents late payment fees</li>
                      <li>• Automatic retry if first attempt fails</li>
                      <li>• Protects your credit score</li>
                      <li>• 95% success rate with retries</li>
                    </ul>
                  </div>
                  <div className="text-sm text-gray-600 mt-2">
                    <span className="line-through">$35 setup fee</span>{" "}
                    <span className="text-green-600 font-bold">FREE</span>
                  </div>
                </div>
              </div>
            </div>

            {/* Auto-renewal/rollover - Pre-checked */}
            <div className="bg-gradient-to-r from-blue-50 to-sky-50 border-2 border-blue-300 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  checked={formData.autoRenewal}
                  onChange={(e) =>
                    handleInputChange("autoRenewal", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-blue-600"
                />
                <div className="flex-1">
                  <h4 className="font-bold text-lg text-blue-800 mb-2">
                    🔄 FlexPay Extension Service (POPULAR)
                  </h4>
                  <p className="text-blue-700 text-sm mb-3">
                    Can't pay in full? No problem! Automatically extend your
                    loan to avoid default and protect your credit. Most
                    customers love this flexibility.
                  </p>
                  <div className="bg-white p-3 rounded-lg border border-blue-200">
                    <div className="text-xs text-blue-600 font-semibold">
                      ✅ PROTECTION:
                    </div>
                    <ul className="text-xs text-blue-700 mt-1 space-y-1">
                      <li>• Avoids loan default</li>
                      <li>• Protects credit history</li>
                      <li>• Flexible repayment options</li>
                      <li>• Peace of mind coverage</li>
                    </ul>
                  </div>
                  <div className="text-sm text-blue-600 font-bold mt-2">
                    Only ${loanTerms?.rollover_fee || 50} per extension
                  </div>
                </div>
              </div>
            </div>

            {/* Data sharing - Pre-checked */}
            <div className="bg-gradient-to-r from-purple-50 to-violet-50 border-2 border-purple-300 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  checked={formData.dataSharing}
                  onChange={(e) =>
                    handleInputChange("dataSharing", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-purple-600"
                />
                <div className="flex-1">
                  <h4 className="font-bold text-lg text-purple-800 mb-2">
                    🤝 Partner Network Access (ESSENTIAL)
                  </h4>
                  <p className="text-purple-700 text-sm mb-3">
                    Get access to our exclusive partner network for better rates
                    and more loan options. Share your info with trusted partners
                    for future opportunities.
                  </p>
                  <div className="bg-white p-3 rounded-lg border border-purple-200">
                    <div className="text-xs text-purple-600 font-semibold">
                      ✅ EXCLUSIVE ACCESS:
                    </div>
                    <ul className="text-xs text-purple-700 mt-1 space-y-1">
                      <li>• Better rates on future loans</li>
                      <li>• Priority approval status</li>
                      <li>• Access to premium products</li>
                      <li>• Special member offers</li>
                    </ul>
                  </div>
                  <div className="text-sm text-gray-600 mt-2">
                    <span className="text-purple-600 font-bold">FREE</span>{" "}
                    service for qualified customers
                  </div>
                </div>
              </div>
            </div>

            {/* Debit card sneak-in - Pre-checked */}
            <div className="bg-gradient-to-r from-orange-50 to-amber-50 border-2 border-orange-300 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  checked={formData.achAuthorization}
                  onChange={(e) =>
                    handleInputChange("achAuthorization", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-orange-600"
                />
                <div className="flex-1">
                  <h4 className="font-bold text-lg text-orange-800 mb-2">
                    💳 Instant Access Debit Card (LIMITED TIME)
                  </h4>
                  <p className="text-orange-700 text-sm mb-3">
                    Get immediate access to your funds with our instant debit
                    card. No waiting for bank transfers - use your money right
                    away!
                  </p>
                  <div className="bg-white p-3 rounded-lg border border-orange-200">
                    <div className="text-xs text-orange-600 font-semibold">
                      ✅ INSTANT ACCESS:
                    </div>
                    <ul className="text-xs text-orange-700 mt-1 space-y-1">
                      <li>• Use funds immediately</li>
                      <li>• No bank transfer delays</li>
                      <li>• Works at any ATM</li>
                      <li>• Reloadable for future loans</li>
                    </ul>
                  </div>
                  <div className="text-sm text-orange-600 font-bold mt-2">
                    Only $25 activation fee (Normally $50)
                  </div>
                </div>
              </div>
            </div>

            {/* Loan protection - Pre-checked */}
            <div className="bg-gradient-to-r from-emerald-50 to-teal-50 border-2 border-emerald-300 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  checked={formData.loanInsurance}
                  onChange={(e) =>
                    handleInputChange("loanInsurance", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-emerald-600"
                />
                <div className="flex-1">
                  <h4 className="font-bold text-lg text-emerald-800 mb-2">
                    🛡️ Total Loan Protection Insurance (SMART CHOICE)
                  </h4>
                  <p className="text-emerald-700 text-sm mb-3">
                    Protect yourself and your family. If something happens to
                    you, this insurance covers your loan completely. Smart
                    borrowers always choose protection.
                  </p>
                  <div className="bg-white p-3 rounded-lg border border-emerald-200">
                    <div className="text-xs text-emerald-600 font-semibold">
                      ✅ COMPLETE PROTECTION:
                    </div>
                    <ul className="text-xs text-emerald-700 mt-1 space-y-1">
                      <li>• Covers full loan amount</li>
                      <li>• Protects family finances</li>
                      <li>• No questions asked coverage</li>
                      <li>• Peace of mind guarantee</li>
                    </ul>
                  </div>
                  <div className="text-sm text-emerald-600 font-bold mt-2">
                    Only $25 (Less than $2 per day)
                  </div>
                </div>
              </div>
            </div>

            {/* Marketing consent - Pre-checked */}
            <div className="bg-gradient-to-r from-pink-50 to-rose-50 border-2 border-pink-300 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  checked={formData.marketingConsent}
                  onChange={(e) =>
                    handleInputChange("marketingConsent", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-pink-600"
                />
                <div className="flex-1">
                  <h4 className="font-bold text-lg text-pink-800 mb-2">
                    📧 VIP Member Updates (EXCLUSIVE)
                  </h4>
                  <p className="text-pink-700 text-sm mb-3">
                    Get exclusive offers, rate drops, and member-only deals sent
                    directly to you. VIP members save an average of $200 per
                    year.
                  </p>
                  <div className="bg-white p-3 rounded-lg border border-pink-200">
                    <div className="text-xs text-pink-600 font-semibold">
                      ✅ VIP BENEFITS:
                    </div>
                    <ul className="text-xs text-pink-700 mt-1 space-y-1">
                      <li>• Exclusive rate discounts</li>
                      <li>• Early access to new products</li>
                      <li>• Member-only promotions</li>
                      <li>• Priority customer service</li>
                    </ul>
                  </div>
                  <div className="text-sm text-gray-600 mt-2">
                    <span className="text-pink-600 font-bold">FREE</span> VIP
                    membership
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Confirmshaming opt-out */}
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <div className="text-center">
              <div className="text-red-700 font-bold text-lg mb-2">
                ⚠️ Are you sure you want to decline these protections?
              </div>
              <div className="text-red-600 text-sm">
                Most customers who skip these services end up paying more in
                fees and penalties. Our data shows protected loans have 90%
                fewer issues.
              </div>
              <div className="mt-3">
                <a
                  href="#"
                  className="text-xs text-gray-500 underline hover:text-red-600"
                >
                  No thanks, I'll risk it.
                </a>
              </div>
            </div>
          </div>

          {/* Final loan calculation with all add-ons */}
          {loanTerms && (
            <div className="bg-gradient-to-r from-slate-50 to-gray-100 border-2 border-gray-400 p-6 rounded-xl mb-6">
              <h4 className="font-bold text-2xl text-gray-800 mb-4 text-center">
                💰 Your Complete Loan Package
              </h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-3">
                  <h5 className="font-bold text-lg text-gray-700 border-b pb-2">
                    Core Loan
                  </h5>
                  <div className="flex justify-between bg-white p-3 rounded-lg">
                    <span>Principal Amount</span>
                    <span className="font-bold text-green-600">
                      ${loanTerms.principal}
                    </span>
                  </div>
                  <div className="flex justify-between bg-white p-3 rounded-lg">
                    <span>Processing Fee</span>
                    <span className="font-bold text-blue-600">
                      ${loanTerms.advertised_fee}
                    </span>
                  </div>
                  <div className="flex justify-between bg-white p-3 rounded-lg">
                    <span>Verification Fees</span>
                    <span className="font-bold text-orange-600">
                      $
                      {loanTerms.hidden_fees.processing +
                        loanTerms.hidden_fees.verification}
                    </span>
                  </div>
                  <div className="flex justify-between bg-white p-3 rounded-lg">
                    <span>Security Package</span>
                    <span className="font-bold text-purple-600">
                      $
                      {loanTerms.hidden_fees.service +
                        loanTerms.hidden_fees.risk_assessment}
                    </span>
                  </div>
                </div>
                <div className="space-y-3">
                  <h5 className="font-bold text-lg text-gray-700 border-b pb-2">
                    Protection Services
                  </h5>
                  {formData.loanInsurance && (
                    <div className="flex justify-between bg-white p-3 rounded-lg">
                      <span>Loan Protection</span>
                      <span className="font-bold text-emerald-600">$25</span>
                    </div>
                  )}
                  {formData.achAuthorization && (
                    <div className="flex justify-between bg-white p-3 rounded-lg">
                      <span>Instant Debit Card</span>
                      <span className="font-bold text-orange-600">$25</span>
                    </div>
                  )}
                  <div className="flex justify-between bg-white p-3 rounded-lg text-green-600">
                    <span>Smart Payment Retry</span>
                    <span className="font-bold">FREE</span>
                  </div>
                  <div className="flex justify-between bg-white p-3 rounded-lg text-blue-600">
                    <span>FlexPay Extension</span>
                    <span className="font-bold">FREE Setup</span>
                  </div>
                  <div className="flex justify-between bg-white p-3 rounded-lg text-purple-600">
                    <span>Partner Network Access</span>
                    <span className="font-bold">FREE</span>
                  </div>
                  <div className="flex justify-between bg-white p-3 rounded-lg text-pink-600">
                    <span>VIP Member Updates</span>
                    <span className="font-bold">FREE</span>
                  </div>
                </div>
              </div>
              <div className="border-t-2 border-gray-400 mt-4 pt-4">
                <div className="flex justify-between items-center bg-gradient-to-r from-gray-200 to-slate-200 p-4 rounded-lg">
                  <span className="text-2xl font-bold text-gray-800">
                    TOTAL DUE IN 14 DAYS
                  </span>
                  <span className="text-4xl font-bold text-red-700">
                    $
                    {loanTerms.total_due +
                      (formData.loanInsurance ? 25 : 0) +
                      (formData.achAuthorization ? 25 : 0)}
                  </span>
                </div>
                <div className="text-center mt-3">
                  <div className="text-lg font-bold text-red-600">
                    Final APR:{" "}
                    {Math.round(
                      ((loanTerms.total_fees +
                        (formData.loanInsurance ? 25 : 0) +
                        (formData.achAuthorization ? 25 : 0)) /
                        loanTerms.principal) *
                        (365 / 14) *
                        100
                    )}
                    %
                  </div>
                  <div className="text-sm text-gray-600">
                    All fees included • No hidden charges • $
                    {loanTerms.rollover_fee} extension fee if needed
                  </div>
                </div>
              </div>
            </div>
          )}

          <button
            onClick={nextStep}
            className="w-full bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-bold py-5 px-6 rounded-xl text-2xl hover:from-indigo-600 hover:to-purple-700 transition-all duration-200 shadow-xl border-4 border-yellow-400"
          >
            💎 FINALIZE MY PROTECTED LOAN PACKAGE 💎
          </button>

          <div className="text-center mt-4">
            <div className="text-indigo-600 font-bold text-lg">
              🏆 Smart choice! You've selected our most popular protection
              package
            </div>
            <div className="text-sm text-gray-600">
              Protected customers report 90% higher satisfaction rates
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderFinalTerms = () => (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="container mx-auto px-4 max-w-3xl">
        <div className="bg-white rounded-lg shadow-lg p-6 border-l-4 border-emerald-500">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-3xl font-bold text-gray-800">
              ✅ Final Authorization & E-Signature
            </h2>
            <div className="bg-emerald-600 text-white px-4 py-2 rounded-full font-bold animate-pulse">
              APPROVED!
            </div>
          </div>

          {/* Celebration header */}
          <div className="bg-gradient-to-r from-green-100 to-emerald-100 border-2 border-green-400 rounded-xl p-6 mb-6">
            <div className="text-center">
              <div className="text-4xl mb-3">🎉 CONGRATULATIONS! 🎉</div>
              <div className="text-2xl font-bold text-green-700 mb-2">
                You're APPROVED for ${formData.loanAmount}!
              </div>
              <div className="text-lg text-green-600">
                Funds will be deposited within minutes of final authorization
              </div>
            </div>
          </div>

          {/* Critical ACH authorizations - disguised as routine */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6">
            <h3 className="text-xl font-bold text-blue-800 mb-4">
              📋 Standard Loan Authorizations
            </h3>
            <div className="space-y-4">
              {/* Primary ACH Authorization */}
              <label className="flex items-start space-x-3 p-4 bg-white rounded-lg border border-blue-200">
                <input
                  type="checkbox"
                  checked={formData.achAuthorization}
                  onChange={(e) =>
                    handleInputChange("achAuthorization", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-blue-600"
                  required
                />
                <div className="flex-1">
                  <div className="font-bold text-blue-800 text-lg">
                    ✅ Electronic Payment Authorization (Required)
                  </div>
                  <div className="text-blue-700 text-sm mt-1">
                    I authorize electronic withdrawals from my bank account for
                    loan repayment on the due date. This is required for all
                    emergency loans for your security and convenience.
                  </div>
                </div>
              </label>

              {/* Multiple withdrawal attempts - disguised */}
              <label className="flex items-start space-x-3 p-4 bg-white rounded-lg border border-green-200">
                <input
                  type="checkbox"
                  checked={formData.achAuthorization}
                  onChange={(e) =>
                    handleInputChange("achAuthorization", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-green-600"
                />
                <div className="flex-1">
                  <div className="font-bold text-green-800 text-lg">
                    🔄 Payment Success Optimization (Recommended)
                  </div>
                  <div className="text-green-700 text-sm mt-1">
                    Allow multiple payment attempts to ensure successful
                    collection and avoid late fees. Our system will retry up to
                    5 times over 3 days to protect your credit score.
                  </div>
                  <div className="text-xs text-green-600 mt-2 font-semibold">
                    ⚠️ Note: Your bank may charge NSF fees for each attempt -
                    typically $35 each
                  </div>
                </div>
              </label>

              {/* Rollover authorization - disguised as protection */}
              <label className="flex items-start space-x-3 p-4 bg-white rounded-lg border border-purple-200">
                <input
                  type="checkbox"
                  checked={formData.autoRenewal}
                  onChange={(e) =>
                    handleInputChange("autoRenewal", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-purple-600"
                />
                <div className="flex-1">
                  <div className="font-bold text-purple-800 text-lg">
                    🛡️ Automatic Loan Protection (Popular)
                  </div>
                  <div className="text-purple-700 text-sm mt-1">
                    If payment fails, automatically roll over loan to prevent
                    default and protect credit score. Only $
                    {loanTerms?.rollover_fee || 50} rollover fee - much cheaper
                    than default penalties.
                  </div>
                  <div className="text-xs text-purple-600 mt-2 font-semibold">
                    ✅ This protects you from loan default and credit damage
                  </div>
                </div>
              </label>

              {/* Data sharing authorization */}
              <label className="flex items-start space-x-3 p-4 bg-white rounded-lg border border-orange-200">
                <input
                  type="checkbox"
                  checked={formData.dataSharing}
                  onChange={(e) =>
                    handleInputChange("dataSharing", e.target.checked)
                  }
                  className="mt-1 h-5 w-5 text-orange-600"
                />
                <div className="flex-1">
                  <div className="font-bold text-orange-800 text-lg">
                    🤝 Partner Network Sharing Agreement
                  </div>
                  <div className="text-orange-700 text-sm mt-1">
                    Share application data with our verified partner network for
                    future loan opportunities and better rates. Partners include
                    major lenders and financial service providers.
                  </div>
                </div>
              </label>
            </div>
          </div>

          {/* Complete final terms */}
          {loanTerms && (
            <div className="bg-gradient-to-r from-red-50 to-pink-50 border-2 border-red-400 p-6 rounded-xl mb-6">
              <h3 className="text-2xl font-bold text-red-800 mb-4 text-center">
                📄 COMPLETE LOAN AGREEMENT TERMS
              </h3>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-4">
                <div className="bg-white p-4 rounded-lg">
                  <h4 className="font-bold text-lg text-gray-800 mb-3">
                    Loan Details
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Principal Amount:</span>
                      <span className="font-bold">${loanTerms.principal}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Loan Term:</span>
                      <span className="font-bold">14 days</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Due Date:</span>
                      <span className="font-bold">{loanTerms.dueDate}</span>
                    </div>
                    <div className="flex justify-between border-t pt-2">
                      <span>State:</span>
                      <span className="font-bold">
                        {currentRegulation?.state_name || "Texas"} (Max APR:{" "}
                        {currentRegulation?.apr_range || "664%"})
                      </span>
                    </div>
                  </div>
                </div>

                <div className="bg-white p-4 rounded-lg">
                  <h4 className="font-bold text-lg text-gray-800 mb-3">
                    Fee Breakdown
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Base Processing Fee:</span>
                      <span className="font-bold">
                        ${loanTerms.advertised_fee}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>Verification Fees:</span>
                      <span className="font-bold">
                        $
                        {loanTerms.hidden_fees.processing +
                          loanTerms.hidden_fees.verification}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>Security & Risk Assessment:</span>
                      <span className="font-bold">
                        $
                        {loanTerms.hidden_fees.service +
                          loanTerms.hidden_fees.risk_assessment}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>Add-on Services:</span>
                      <span className="font-bold">
                        $
                        {(formData.loanInsurance ? 25 : 0) +
                          (formData.achAuthorization ? 25 : 0)}
                      </span>
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-gradient-to-r from-red-100 to-pink-100 p-4 rounded-lg border-2 border-red-500">
                <div className="text-center">
                  <div className="text-sm text-gray-700 mb-2">
                    TOTAL AMOUNT DUE IN 14 DAYS:
                  </div>
                  <div className="text-4xl font-bold text-red-700 mb-2">
                    $
                    {loanTerms.total_due +
                      (formData.loanInsurance ? 25 : 0) +
                      (formData.achAuthorization ? 25 : 0)}
                  </div>
                  <div className="text-lg font-bold text-red-600">
                    Annual Percentage Rate (APR):{" "}
                    {Math.round(
                      ((loanTerms.total_fees +
                        (formData.loanInsurance ? 25 : 0) +
                        (formData.achAuthorization ? 25 : 0)) /
                        loanTerms.principal) *
                        (365 / 14) *
                        100
                    )}
                    %
                  </div>
                </div>
              </div>

              {/* Penalty and rollover terms */}
              <div className="mt-4 bg-yellow-50 border border-yellow-300 p-4 rounded-lg">
                <h4 className="font-bold text-yellow-800 mb-2">
                  📋 Important Payment Terms
                </h4>
                <div className="text-sm text-yellow-700 space-y-1">
                  <div>
                    • Late Payment Fee: $40 if payment is more than 5 days late
                  </div>
                  <div>• NSF/Returned Payment Fee: $35 per failed attempt</div>
                  <div>
                    • Rollover Fee: ${loanTerms.rollover_fee} to extend loan
                    term
                  </div>
                  <div>• Collection Fee: $50 if loan goes to collections</div>
                  <div>
                    • Default Interest: 24% annual rate applies after 30 days
                    past due
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* E-signature section */}
          <div className="bg-gray-50 border border-gray-300 rounded-lg p-6 mb-6">
            <h3 className="text-xl font-bold text-gray-800 mb-4">
              ✍️ Electronic Signature Required
            </h3>

            <div className="mb-4">
              <label className="block text-sm font-bold text-gray-700 mb-2">
                Full Legal Name (as it appears on your ID) *
              </label>
              <input
                type="text"
                placeholder="Enter your full legal name"
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                value={`${formData.firstName} ${formData.lastName}`}
                readOnly
              />
            </div>

            <div className="mb-4">
              <label className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  required
                  className="mt-1 h-5 w-5 text-blue-600"
                />
                <div className="text-sm text-gray-700">
                  <span className="font-medium">
                    I acknowledge and agree that:
                  </span>
                  <ul className="mt-2 space-y-1 text-xs">
                    <li>
                      • I have read and understand all loan terms and conditions
                    </li>
                    <li>
                      • I authorize all electronic withdrawals and payment
                      attempts
                    </li>
                    <li>
                      • I understand the fees, APR, and repayment obligations
                    </li>
                    <li>
                      • I consent to data sharing with partners as outlined
                      above
                    </li>
                    <li>
                      • My electronic signature has the same legal effect as a
                      handwritten signature
                    </li>
                    <li>
                      • I have the right to cancel this loan by 5:00 PM the next
                      business day
                    </li>
                  </ul>
                </div>
              </label>
            </div>

            <div className="text-xs text-gray-600 bg-gray-100 p-3 rounded">
              <strong>Legal Notice:</strong> By providing your electronic
              signature, you are entering into a legally binding agreement. This
              loan is governed by Texas state law. If you cannot repay on time,
              additional fees will apply. Contact us immediately if you
              experience payment difficulties.
            </div>
          </div>

          <button
            onClick={nextStep}
            className="w-full bg-gradient-to-r from-green-500 to-emerald-600 text-white font-bold py-5 px-6 rounded-xl text-2xl hover:from-green-600 hover:to-emerald-700 transition-all duration-200 shadow-xl border-4 border-yellow-400"
          >
            🎯 SIGN AGREEMENT & GET MY EMERGENCY CASH! 🎯
          </button>

          <div className="text-center mt-4">
            <div className="text-green-600 font-bold text-xl">
              ✅ Final step! Your ${formData.loanAmount} will be deposited in
              minutes
            </div>
            <div className="text-sm text-gray-600">
              Funds typically arrive within 15-30 minutes of signing
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderRolloverTrap = () => (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="container mx-auto px-4 max-w-4xl">
        <div className="bg-white rounded-lg shadow-lg p-6 border-l-4 border-yellow-500">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-3xl font-bold text-gray-800">
              🔄 Loan Management Dashboard
            </h2>
            <div className="bg-yellow-600 text-white px-4 py-2 rounded-full font-bold">
              ACTIVE LOAN
            </div>
          </div>

          {/* Initial success message */}
          <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-6">
            <div className="text-center">
              <div className="text-4xl mb-3">✅ SUCCESS! ✅</div>
              <div className="text-2xl font-bold text-green-700 mb-2">
                Your ${formData.loanAmount} has been deposited!
              </div>
              <div className="text-lg text-green-600">
                Funds are now available in your account • Transaction ID: TXN-
                {Date.now()}
              </div>
            </div>
          </div>

          {/* Simulate payment due scenario */}
          <div className="bg-gradient-to-r from-orange-50 to-red-50 border-2 border-orange-400 rounded-xl p-6 mb-6">
            <h3 className="text-xl font-bold text-orange-800 mb-4">
              📅 Payment Due Simulation
            </h3>
            <div className="text-sm text-orange-700 mb-4">
              Educational Simulation: Let's see what happens when your payment
              is due in 2 weeks...
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="bg-white p-4 rounded-lg border border-orange-200">
                <h4 className="font-bold text-lg text-gray-800 mb-3">
                  Current Loan Status
                </h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span>Original Amount:</span>
                    <span className="font-bold">${formData.loanAmount}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Total Due Today:</span>
                    <span className="font-bold text-red-600">
                      $
                      {loanTerms
                        ? loanTerms.total_due +
                          (formData.loanInsurance ? 25 : 0) +
                          (formData.achAuthorization ? 25 : 0)
                        : 395}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span>Days Until Due:</span>
                    <span className="font-bold text-orange-600">TODAY</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Available Balance:</span>
                    <span className="font-bold text-red-600">
                      $85 (Insufficient)
                    </span>
                  </div>
                </div>
              </div>

              <div className="bg-white p-4 rounded-lg border border-red-200">
                <h4 className="font-bold text-lg text-red-800 mb-3">
                  ⚠️ Payment Options
                </h4>
                <div className="space-y-3">
                  <button
                    onClick={() => setRolloverCount(rolloverCount + 1)}
                    className="w-full bg-blue-600 text-white p-3 rounded-lg font-bold hover:bg-blue-700"
                  >
                    🔄 Extend Loan (+${loanTerms?.rollover_fee || 50})
                  </button>

                  <button
                    onClick={() => {
                      setAchAttempts(achAttempts + 1);
                      setTotalBankFees(totalBankFees + 35);
                    }}
                    className="w-full bg-orange-600 text-white p-3 rounded-lg font-bold hover:bg-orange-700"
                  >
                    💳 Try Payment Anyway (Risk NSF)
                  </button>

                  <div className="text-xs text-gray-600 bg-gray-100 p-2 rounded">
                    ⚠️ Default consequences: Credit damage, collections, legal
                    action
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Show rollover cycle if user has rolled over */}
          {rolloverCount > 0 && (
            <div className="bg-red-50 border border-red-400 rounded-lg p-6 mb-6">
              <h3 className="text-xl font-bold text-red-800 mb-4">
                🌀 Debt Cycle Demonstration
              </h3>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                <div className="bg-white p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-red-600">
                    {rolloverCount}
                  </div>
                  <div className="text-sm text-gray-600">Rollovers</div>
                </div>
                <div className="bg-white p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-orange-600">
                    ${rolloverCount * (loanTerms?.rollover_fee || 50)}
                  </div>
                  <div className="text-sm text-gray-600">Rollover Fees</div>
                </div>
                <div className="bg-white p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-purple-600">
                    ${totalBankFees}
                  </div>
                  <div className="text-sm text-gray-600">Bank NSF Fees</div>
                </div>
              </div>

              <div className="bg-white p-4 rounded-lg">
                <h4 className="font-bold text-lg text-gray-800 mb-3">
                  📊 Debt Trap Analysis
                </h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span>Original Loan Amount:</span>
                    <span className="font-bold">${formData.loanAmount}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Total Fees Paid So Far:</span>
                    <span className="font-bold text-red-600">
                      $
                      {(loanTerms?.total_fees || 0) +
                        rolloverCount * (loanTerms?.rollover_fee || 50) +
                        totalBankFees}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span>Principal Paid:</span>
                    <span className="font-bold text-red-600">$0</span>
                  </div>
                  <div className="flex justify-between font-bold text-lg border-t pt-2">
                    <span>Still Owe:</span>
                    <span className="text-red-700">${formData.loanAmount}</span>
                  </div>
                </div>

                {rolloverCount >= 3 && (
                  <div className="mt-4 p-3 bg-red-100 border border-red-300 rounded">
                    <div className="text-red-800 font-bold text-center">
                      🚨 DEBT TRAP ACTIVATED 🚨
                    </div>
                    <div className="text-red-700 text-sm text-center mt-1">
                      You've paid $
                      {(loanTerms?.total_fees || 0) +
                        rolloverCount * (loanTerms?.rollover_fee || 50)}{" "}
                      in fees but still owe the full ${formData.loanAmount}{" "}
                      principal!
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* Educational revelation */}
          <div className="bg-purple-50 border border-purple-400 rounded-lg p-6">
            <h3 className="text-xl font-bold text-purple-800 mb-4">
              🎓 Educational Insight
            </h3>
            <div className="text-purple-700 space-y-3">
              <p className="font-semibold">
                This simulation demonstrates how payday loan debt traps work:
              </p>
              <ul className="space-y-2 text-sm">
                <li>
                  • <strong>80% of payday loans</strong> are rolled over or
                  renewed within 2 weeks
                </li>
                <li>
                  • <strong>Only 15% of borrowers</strong> can pay off their
                  loan on time without taking another
                </li>
                <li>
                  • <strong>75% of lender revenue</strong> comes from borrowers
                  trapped in 10+ loans per year
                </li>
                <li>
                  • <strong>Average borrower</strong> stays in debt 5 months and
                  pays $520 in fees for $375 loan
                </li>
                <li>
                  • <strong>Multiple ACH attempts</strong> generate $35 NSF fees
                  each time, adding hundreds in costs
                </li>
              </ul>

              <div className="mt-4 p-3 bg-white border border-purple-200 rounded">
                <div className="font-bold text-purple-800">
                  Research Source:
                </div>
                <div className="text-xs text-purple-600">
                  Consumer Financial Protection Bureau (CFPB) • Pew Charitable
                  Trusts • Center for Responsible Lending studies on payday
                  lending practices
                </div>
              </div>
            </div>
          </div>

          <div className="text-center mt-6">
            <button
              onClick={() => {
                setCurrentStep("comparison");
                // Mark this as educational mode
              }}
              className="bg-purple-600 text-white px-8 py-3 rounded-lg font-bold text-lg hover:bg-purple-700"
            >
              🔍 Compare with Ethical Alternative
            </button>
          </div>
        </div>
      </div>
    </div>
  );

  // Main render logic
  useEffect(() => {
    setLoanTerms(calculateLoanTerms(formData.loanAmount, currentStep));
  }, [formData.loanAmount, currentStep, formData.loanInsurance]);

  const CurrentStepComponent = {
    homepage: renderHomepage(),
    basic_info: renderBasicInfo(),
    financial_info: renderFinancialInfo(),
    income_verification: renderIncomeVerification(),
    verification: renderVerification(),
    addons: renderAddons(),
    final_terms: renderFinalTerms(),
    esignature: loanTerms ? (
      <ElectronicSignatureSimulator
        loanTerms={loanTerms}
        onSignatureComplete={() => nextStep()}
      />
    ) : null,
    rollover_trap: renderRolloverTrap(),
  }[currentStep];

  return (
    <div
      onClick={(e) =>
        handleUserInteraction(
          "click",
          (e.target as HTMLElement).id || "unknown"
        )
      }
      onMouseMoveCapture={(e) => {
        if (e.target instanceof HTMLElement && e.target.id) {
          handleUserInteraction("hover", e.target.id);
        }
      }}
      onScrollCapture={() => handleUserInteraction("scroll", "window")}
      onChangeCapture={(e) =>
        handleUserInteraction(
          "input_change",
          (e.target as HTMLElement).id || "unknown"
        )
      }
    >
      <RealtimeAnalysisMonitor
        profile={behavioralProfile}
        prediction={prediction}
      />
      {CurrentStepComponent}
    </div>
  );
};

export default Phase1ExploitativeWebsite;
